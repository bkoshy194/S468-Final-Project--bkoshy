[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ben Koshy Stat 468 Final Project",
    "section": "",
    "text": "1 Project Information",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Index</span>"
    ]
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "Ben Koshy Stat 468 Final Project",
    "section": "1.1 Abstract",
    "text": "1.1 Abstract\nThe modern day NFL offensive strategy has become increasingly passing prevalent. I believe that it would be worthwhile to investigate rushing success in the league to help teams make more informed decisions when it comes to orchestrating an offense that utilizes the run effectively. I have chosen to do this by utilizing the feature rich data available through the Big Data Bowl, which I then will work with to evaluate potential models to create and evaluate predictions. I will then create a Shiny App which allows team staff to evaluate run success based on factors of interest.\nThis can help a team understand how different features of specific game aspects can help assess the probability of success of a given run play.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Index</span>"
    ]
  },
  {
    "objectID": "index.html#data-being-used",
    "href": "index.html#data-being-used",
    "title": "Ben Koshy Stat 468 Final Project",
    "section": "1.2 Data Being Used",
    "text": "1.2 Data Being Used\nThere is a variety of data that is being used from the Big Data Bowl :\n“NFL Big Data Bowl 2025” (n.d.)\n\n1.2.1 File descriptions\nGame data: The games.csv contains the teams playing in each game. The key variable is gameId.\nPlay data: The plays.csv file contains play-level information from each game. The key variables are gameId and playId.\nPlayer data: The players.csv file contains player-level information from players that participated in any of the tracking data files. The key variable is nflId.\nPlayer play data: The player_play.csv file contains player-level stats for each game and play. The key variables are gameId, playId, and nflId.\nTracking data: Files tracking_week_[week].csv contain player tracking data from week number [week]. The key variables are gameId, playId, and nflId.\n\n1.2.1.1 Game data\n\ngameId: Game identifier, unique (numeric)\nseason: Season of game\nweek: Week of game\ngameDate: Game Date (time, mm/dd/yyyy)\ngameTimeEastern: Start time of game (time, HH:MM:SS, EST)\nhomeTeamAbbr: Home team three-letter code (text)\nvisitorTeamAbbr: Visiting team three-letter code (text)\nhomeFinalScore: The total amount of points scored by the home team in the game (numeric)\nvisitorFinalScore: The total amount of points scored by the visiting team in the game (numeric)\n\n\n\n1.2.1.2 Play data\n\ngameId: Game identifier, unique (numeric)\nplayId: Play identifier, not unique across games (numeric)\nplayDescription: Description of play (text)\nquarter: Game quarter (numeric)\ndown: Down (numeric)\nyardsToGo: Distance needed for a first down (numeric)\npossessionTeam: Team abbr of team on offense with possession of ball (text)\ndefensiveTeam: Team abbr of team on defense (text)\nyardlineSide: 3-letter team code corresponding to line-of-scrimmage (text)\nyardlineNumber: Yard line at line-of-scrimmage (numeric)\ngameClock: Time on clock of play (MM:SS)\npreSnapHomeScore: Home score prior to the play (numeric)\npreSnapVisitorScore: Visiting team score prior to the play (numeric)\nplayNullifiedByPenalty: Whether or not an accepted penalty on the play cancels the play outcome. Y stands for yes and N stands for no. (text)\nabsoluteYardlineNumber: Distance from end zone for possession team (numeric)\npreSnapHomeTeamWinProbability: The win probability of the home team before the play (numeric)\npreSnapVisitorTeamWinProbability: The win probability of the visiting team before the play (numeric)\nexpectedPoints: Expected points on this play (numeric)\noffenseFormation: Formation used by possession team (text)\nreceiverAlignment: Enumerated as 0x0, 1x0, 1x1, 2x0, 2x1, 2x2, 3x0, 3x1, 3x2 (text)\nplayClockAtSnap: What the play clock value was at time of snap (numeric)\npassResult: Dropback outcome of the play (C: Complete pass, I: Incomplete pass, S: Quarterback sack, IN: Intercepted pass, R: Scramble, text)\npassLength: The distance beyond the LOS that the ball traveled not including yards into the endzone. If thrown behind LOS, the value is negative. (numeric)\ntargetX: The x-coordinate of the targeted receiver when the pass arrived (numeric)\ntargetY: The y-coordinate of the targeted receiver when the pass arrived (numeric)\nplayAction: Boolean indicating whether there was play-action on the play (Boolean)\ndropbackType: The type of drop back after the snap by the QB (Traditional, Designed Rollout, Scramble, Scramble Rollout, Designed Rollout Left, Designed Rollout Right, Scramble Rollout Left, Scramble Rollout Right, Designed Run, QB Draw, Rollout, text)\ndropbackDistance: The distance the QB dropped back (yards) behind the center after the snap (numeric)\npassLocationType: The location type of where the QB was at the time of throw (Inside Tackle Box, Outside Left, Outside Right, Unknown, text)\ntimeToThrow: The time (secs) elapsed between snap and pass (numeric)\ntimeInTackleBox: The amount of time the QB spent inside the tackle box (numeric)\ntimeToSack: The time from snap to the time the QB was sacked (numeric)\npassTippedAtLine: Boolean indicating whether the pass was tipped at the line of scrimmage (Boolean)\nunblockedPressure: Boolean indicating whether there was pressure from an unblocked player (Boolean)\nqbSpike: Boolean indicating whether the play was a QB Spike (Boolean)\nqbKneel: Whether or not the play was a QB Kneel (numeric)\nqbSneak: Whether or not the play was a QB Sneak (numeric)\nrushLocationType: The direction the runner ran based on where the offensive linemen were during the play (Inside left, Inside right, Outside left, Outside right, Unknown, text)\npenaltyYards: yards gained by offense by penalty (numeric)\nprePenaltyYardsGained: Net yards gained by the offense, before penalty yardage (numeric)\nyardsGained: Net yards gained by the offense, including penalty yardage (numeric)\nhomeTeamWinProbabilityAdded: Win probability delta for home team (numeric)\nvisitorTeamWinProbabilityAdded: Win probability delta for visitor team (numeric)\nexpectedPointsAdded: Expected points added on this play (numeric)\nisDropback: Boolean indicating whether the QB dropped back, meaning the play resulted in a pass, sack, or scramble (Boolean)\npff_runConceptPrimary: The primary run concept on the play (text)\npff_runConceptSecondary: The secondary run concept on the play (text)\npff_runPassOption: Whether or not the play was a run-pass option (numeric)\npff_passCoverage: The pass coverage concept employed by the defense on the play (text)\npff_manZone: Whether the defense employed man or zone coverage on the play (text)\n\n\n\n1.2.1.3 Player Play data\n\ngameId: Game identifier, unique (numeric)\nplayId: Play identifier, not unique across games (numeric)\nnflId: Player identification number, unique across players (numeric)\nteamAbbr: The team abbreviation for the team the player plays for (text)\nhadRushAttempt: Whether or not the player had a rushing attempt on this play (numeric)\nrushingYards: The rush yards accrued by the player on this play (numeric)\nhadDropback: Whether or not the player dropped back on this play (numeric)\npassingYards: The pass yards accrued by the player on this play (numeric)\nsackYardsOffense: The yards lost by the player via a sack on this play (numeric)\nhadPassReception: Whether or not the player caught a pass on this play (numeric)\nreceivingYards: The receiving yards accrued by the player on this play (numeric)\nwasTargettedReceiver: Whether or not the player was the intended receiver on this play (numeric)\nyardageGainedAfterTheCatch: The yards gained after the catch was made by the player on this play (numeric)\nfumbles: The number of fumbles by the player on this play (numeric)\nfumbleLost: Whether or not the player lost a fumble to the opposing team on this play (numeric)\nfumbleOutOfBounds: Whether or not the player fumbled the ball out of bounds on this play (numeric)\nassistedTackle: Whether or not the player required an assist to make a tackle on this play (numeric)\nforcedFumbleAsDefense: Whether or not the player forced a fumble by the opposing team on this play (numeric)\nhalfSackYardsAsDefense: The yards conceded by the offense because of a half-sack by the player on this play (numeric)\npassDefensed: Whether or not a passing play was stopped by the player on this play (numeric)\nquarterbackHit: Whether or not the player recorded a QB hit on this play (numeric)\nsackYardsAsDefense: The yards conceded by the offense because of a sack by the player on this play (numeric)\nsafetyAsDefense: Whether or not the player forced a safety on this play (numeric)\nsoloTackle: Whether or not the player recorded a solo tackle on this play (numeric)\ntackleAssist: Whether or not the player was awarded an assisted tackle on this play (numeric)\ntackleForALoss: Whether or not the player recorded a tackle behind the line of scrimmage on this play (numeric)\ntackleForALossYardage: The yards conceded by the offense because of a tackle behind the line of scrimmage by the player on this play (numeric)\nhadInterception: Whether or not the player intercepted a pass on this play (numeric)\ninterceptionYards: The yards returned by the player on an intercepted pass on this play (numeric)\nfumbleRecoveries: The number of fumbles recovered by the player on this play (numeric)\nfumbleRecoveryYards: The yards returned by the player on a fumble recovery on this play (numeric)\nwasInitialPassRusher: Whether or not the player was the initial pass rusher on this play (numeric)\npenaltyNames: The names of all the penalties that were called on this player on this play (text)\ncausedPressure: Boolean indicating whether the player pressured the QB, defined as achieving a peak pressure probability greater than or equal to 0.75 over the course of a dropback (Boolean)\ntimeToPressureAsPassRusher: The time elapsed from snap to the first instance of this player reaching a pressure probability greater than or equal to 0.75 (numeric)\ngetOffAsPassRusher: The time it took for this player to cross the line of scrimmage as a pass rusher after the ball was snapped (numeric)\ninMotionAtBallSnap: Boolean indicating whether the player was in motion at snap; Rule: If a player is moving faster than 0.62 y/s in the window 0.4 seconds prior to the ball snap, and has moved at least 1.2 yards in that window. (Boolean)\nshiftSinceLineset: Boolean indicating whether the player shifted since the lineset; Rule: Each player has their own lineset moment, and whether they shift is based on if they move more than 2.5 yards from where they were at their lineset moment. (Boolean)\nmotionSinceLineset: Boolean indicating whether the player went in motion after they were initially set at the line on this play (Boolean)\nwasRunningRoute: Boolean indicating if the player was running a route on this play (Boolean)\nrouteRan: The name of the route ran by the player on this play (text)\nblockedPlayerNFLId1: The NFL player ID of the primary opponent being blocked by the player on this play (numeric)\nblockedPlayerNFLId2: The NFL player ID of the secondary opponent being blocked by the player on this play (numeric)\nblockedPlayerNFLId3: The NFL player ID of the tertiary opponent being blocked by the player on this play (numeric)\npressureAllowedAsBlocker: Whether or not any of any of the pass rushers that the blocker had a true matchup against recorded a pressure on this play (numeric)\ntimeToPressureAllowedAsBlocker: The time elapsed from snap to the first instance of a pass rusher who the blocker had a true matchup against achieving a pressure probability above 0.75 on this play (numeric)\npff_defensiveCoverageAssignment: The specific defensive coverage assignment given to the player on this play (text)\n\nPossible values:\n\nMAN: Man\n2R: Deep Half Right\n2L: Deep Half Left\n3R: Deep Third Right\n3M: Deep Third Middle\n3L: Deep Third Left\n4OR: Quarters Outside Right\n4OL: Quarters Outside Left\n4IR: Quarters Inside Right\n4IL: Quarters Inside Left\nFR: Flat Zone Right\nFL: Flat Zone Left\nHCR: Hook/Curl Right\nHCL: Hook/Curl Left\nCFR: Curl/Flat Right\nCFL: Curl/Flat Left\nHOL: Hole\nDF: Deep Free\nPRE: Prevent\n\n\npff_primaryDefensiveCoverageMatchupNflId: The NFL player ID of the opponent tagged as the primary matchup in coverage for the defender on this play (numeric)\npff_secondaryDefensiveCoverageMatchupNflId: The NFL player ID of the opponent tagged as the secondary matchup in coverage for the defender on this play (numeric)\n\n\n\n1.2.1.4 Player data\n\nnflId: Player identification number, unique across players (numeric)\nheight: Player height (text)\nweight: Player weight (numeric)\nbirthDate: Date of birth (YYYY-MM-DD)\ncollegeName: Player college (text)\nposition: Official player position (text)\ndisplayName: Player name (text)\n\n\n\n1.2.1.5 Tracking data\nFiles tracking_week_[week].csv contains player tracking data from week [week].\n\ngameId: Game identifier, unique (numeric)\nplayId: Play identifier, not unique across games (numeric)\nnflId: Player identification number, unique across players. When value is NA, row corresponds to ball. (numeric)\nframeType: Whether frame was before, during or after snap. (text)\ndisplayName: Player name (text)\nframeId: Frame identifier for each play, starting at 1 (numeric)\ntime: Time stamp of play (time, yyyy-mm-dd, hh:mm:ss)\njerseyNumber: Jersey number of player (numeric)\nclub: Team abbrevation of corresponding player (text)\nplayDirection: Direction that the offense is moving (left or right)\nx: Player position along the long axis of the field, 0 - 120 yards. See Figure 1 below. (numeric)\ny: Player position along the short axis of the field, 0 - 53.3 yards. See Figure 1 below. (numeric)\ns: Speed in yards/second (numeric)\na: Acceleration in yards/second^2 (numeric)\ndis: Distance traveled from prior time point, in yards (numeric)\no: Player orientation (deg), 0 - 360 degrees (numeric)\ndir: Angle of player motion (deg), 0 - 360 degrees (numeric)\nevent: Tagged play details, including moment of ball snap, pass release, pass catch, tackle, etc (text)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Index</span>"
    ]
  },
  {
    "objectID": "index.html#technical-contributions",
    "href": "index.html#technical-contributions",
    "title": "Ben Koshy Stat 468 Final Project",
    "section": "1.3 Technical Contributions",
    "text": "1.3 Technical Contributions\nThough a lot of prior work was already done, there were contributions made. First was the custom data engineering and pipeline. Integrating and cleaning four complex NFL datasets (player tracking, plays, player_play, games) to create a unified, analysis-ready database for rush plays. Another was automated feature engineering: e.g., construction of categorical variables, dynamic filtering by position/player, and contextual play metrics (e.g., success by down/yards-to-go).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Index</span>"
    ]
  },
  {
    "objectID": "index.html#constraints",
    "href": "index.html#constraints",
    "title": "Ben Koshy Stat 468 Final Project",
    "section": "1.4 Constraints",
    "text": "1.4 Constraints\nThere are a few constraints to keep in mind for this project:\n\nData Completeness: The analysis relies on the provided player tracking, play, and game data. Any missing, incomplete, or inconsistent records could influence results.\n\nIn this chain of thought, the data is from the 2021 season, so we can’t account for changing trends in past few seasons.\n\nFeature Availability: Only features/variables present in the original datasets (e.g., player position, formation, run concept, play context) can be used for modeling and analysis.\nTime Frame: The dataset is limited to the seasons, weeks, and games made available, which may not capture temporal changes, rare play types, or recent trends.\nProject Timeline Limitation: Due to the limited time frame not as much analysis could be done. An interesting aspect to investigate would have been offensive and defensive skill levels as different teams have varying run defense quality (AKA any team playing Lamar Jackson).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Index</span>"
    ]
  },
  {
    "objectID": "index.html#prior-work",
    "href": "index.html#prior-work",
    "title": "Ben Koshy Stat 468 Final Project",
    "section": "1.5 Prior Work",
    "text": "1.5 Prior Work\nThere has been a substantial amount of work done using the NFL Big Data Bowl data set. A study by Stat CMU “Sacks Big Data Bowl Workshop” (n.d.) had a very good study of sack analysis. Vanderbilt had an excellent study of tackling predictions. Another interesting study was of defender movement analysis “Every Step You Take: Measuring A Defender’s Moves” (n.d.) done by Hassaan Inayatali from the University of Toronto. There is so much more work that has been done as well by other participants in the competition.\n\n\n\n\n“Every Step You Take: Measuring A Defender’s Moves.” n.d. Accessed August 6, 2025. https://kaggle.com/code/hassaaninayatali/every-step-you-take-measuring-a-defender-s-moves.\n\n\n“NFL Big Data Bowl 2025.” n.d. https://kaggle.com/nfl-big-data-bowl-2025.\n\n\n“Sacks Big Data Bowl Workshop.” n.d. Accessed August 6, 2025. https://www.stat.cmu.edu/cmsac/conference/2022/workshop/slides.html#1.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Index</span>"
    ]
  },
  {
    "objectID": "Question.html",
    "href": "Question.html",
    "title": "2  Question",
    "section": "",
    "text": "3 Question\nHow can we assess and predict the success of run plays? Are there certain plays that can perform better in a given situation? Which plays have seen the most success historically?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Question</span>"
    ]
  },
  {
    "objectID": "Question.html#approach",
    "href": "Question.html#approach",
    "title": "2  Question",
    "section": "3.1 Approach",
    "text": "3.1 Approach\nThere are many ways to approach answering this question, but what I have chosen to do is classify successful runs based on yardage gained on a specific down. This can be done from the use of the plays data set.\nFrom this set definition of successful run, we then can explore various models to fit with the goal of estimating run success. From fitting the model, we then use the best performing model and then evaluate the accuracy of these predictions.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Question</span>"
    ]
  },
  {
    "objectID": "Data import.html",
    "href": "Data import.html",
    "title": "3  Data Import",
    "section": "",
    "text": "4 Import",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Import</span>"
    ]
  },
  {
    "objectID": "Data import.html#setup",
    "href": "Data import.html#setup",
    "title": "3  Data Import",
    "section": "4.1 Setup",
    "text": "4.1 Setup\nRequired packages:\n\n\nCode\n#install.packages(rvest)\n#install.packages(stringr)\n#install.packages(tidyverse)\n#install.packages(janitor)\n#install.packages(gt)\n#install.packages(reactable)\n\nlibrary(rvest)\nlibrary(stringr)\nlibrary(tidyverse)\n\n\nWarning: package 'tibble' was built under R version 4.3.1\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\nCode\nlibrary(janitor)\n\n\nWarning: package 'janitor' was built under R version 4.3.3\n\n\nCode\nlibrary(gt)\nlibrary(reactable)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Import</span>"
    ]
  },
  {
    "objectID": "Data import.html#about",
    "href": "Data import.html#about",
    "title": "3  Data Import",
    "section": "4.2 About",
    "text": "4.2 About\nFor the import we simply import all the data required from the NFL Big Data Bowl. Due to the limitation of the the number of years of data, there isn’t variety available in various seasons. What is worth being picky about is the amount of tracking data that we choose to include. For the sake of this study, we don’t need to look at tracking data.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Import</span>"
    ]
  },
  {
    "objectID": "Data import.html#data-import",
    "href": "Data import.html#data-import",
    "title": "3  Data Import",
    "section": "4.3 Data Import",
    "text": "4.3 Data Import\nWe read the csv files:\n\n\nCode\nplays &lt;- read_csv(\"plays.csv\") |&gt; clean_names()\npp &lt;- read_csv(\"player_play.csv\") |&gt; clean_names()\nplayers &lt;- read_csv(\"players.csv\") |&gt; clean_names()\ngames &lt;- read_csv(\"games.csv\")|&gt; clean_names()\n\n\nHere we do implement the clean_names to do column header clean up, which steps a bit into our tidy phase.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Import</span>"
    ]
  },
  {
    "objectID": "Tidy.html",
    "href": "Tidy.html",
    "title": "4  Tidy and Transform",
    "section": "",
    "text": "5 Tidy and Transform",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tidy and Transform</span>"
    ]
  },
  {
    "objectID": "Tidy.html#setup",
    "href": "Tidy.html#setup",
    "title": "4  Tidy and Transform",
    "section": "5.1 Setup",
    "text": "5.1 Setup\nRequired packages:\n\n\nCode\n#install.packages(\"rvest\")\n#install.packages(\"stringr\")\n#install.packages(\"tidyverse\")\n#install.packages(\"janitor\")\n#install.packages(\"gt\")\n#install.packages(\"reactable\")\n#library(pins)\n#library(vetiver)\n#library(plumber)\n#library(aws.s3)\n#library(arrow)\n\nlibrary(rvest)\nlibrary(stringr)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(gt)\nlibrary(reactable)\nlibrary(pins)\nlibrary(vetiver)\nlibrary(plumber)\nlibrary(aws.s3)\nlibrary(arrow)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tidy and Transform</span>"
    ]
  },
  {
    "objectID": "Tidy.html#tidying-the-data",
    "href": "Tidy.html#tidying-the-data",
    "title": "4  Tidy and Transform",
    "section": "5.2 Tidying the Data",
    "text": "5.2 Tidying the Data\nThe process of Tidying involved putting data into a tidy form and cleaning it. This aims to make later analysis and processing much more convenient. We already cleaned up the column names in the import step itself. We see that the column headers are named well, and our data appears to be correctly specified which is great!\n\n\nCode\ngt(plays[1:10,])\n\n\n\n\n\n\n\n\ngame_id\nplay_id\nplay_description\nquarter\ndown\nyards_to_go\npossession_team\ndefensive_team\nyardline_side\nyardline_number\ngame_clock\npre_snap_home_score\npre_snap_visitor_score\nplay_nullified_by_penalty\nabsolute_yardline_number\npre_snap_home_team_win_probability\npre_snap_visitor_team_win_probability\nexpected_points\noffense_formation\nreceiver_alignment\nplay_clock_at_snap\npass_result\npass_length\ntarget_x\ntarget_y\nplay_action\ndropback_type\ndropback_distance\npass_location_type\ntime_to_throw\ntime_in_tackle_box\ntime_to_sack\npass_tipped_at_line\nunblocked_pressure\nqb_spike\nqb_kneel\nqb_sneak\nrush_location_type\npenalty_yards\npre_penalty_yards_gained\nyards_gained\nhome_team_win_probability_added\nvisitor_team_win_probility_added\nexpected_points_added\nis_dropback\npff_run_concept_primary\npff_run_concept_secondary\npff_run_pass_option\npff_pass_coverage\npff_man_zone\n\n\n\n\n2022102302\n2655\n(1:54) (Shotgun) J.Burrow pass short middle to T.Boyd to CIN 30 for 9 yards (J.Hawkins).\n3\n1\n10\nCIN\nATL\nCIN\n21\n01:54:00\n35\n17\nN\n31\n0.982017488\n0.017982512\n0.7193135\nEMPTY\n3x2\n10\nC\n6\n36.69\n16.51\nFALSE\nTRADITIONAL\n2.40\nINSIDE_BOX\n2.990\n2.990\nNA\nFALSE\nFALSE\nFALSE\n0\nNA\nNA\nNA\n9\n9\n0.0046338425\n-0.0046338425\n0.7027167\nTRUE\nNA\nNA\n0\nCover-3\nZone\n\n\n2022091809\n3698\n(2:13) (Shotgun) J.Burrow pass short right to H.Hurst to CIN 12 for 4 yards (L.Vander Esch).\n4\n1\n10\nCIN\nDAL\nCIN\n8\n02:13:00\n17\n17\nN\n18\n0.424356237\n0.575643763\n0.6077456\nEMPTY\n3x2\n9\nC\n4\n20.83\n20.49\nFALSE\nTRADITIONAL\n1.14\nINSIDE_BOX\n1.836\n1.836\nNA\nFALSE\nFALSE\nFALSE\n0\nNA\nNA\nNA\n4\n4\n0.0028469265\n-0.0028469265\n-0.2405086\nTRUE\nNA\nNA\n0\nQuarters\nZone\n\n\n2022103004\n3146\n(2:00) (Shotgun) D.Mills pass short right to D.Pierce to HST 26 for 6 yards (D.Walker).\n4\n3\n12\nHOU\nTEN\nHOU\n20\n02:00:00\n3\n17\nN\n30\n0.006291237\n0.993708763\n-0.2914852\nSHOTGUN\n2x2\n12\nC\n-4\n26.02\n17.56\nFALSE\nTRADITIONAL\n3.20\nINSIDE_BOX\n2.236\n2.236\nNA\nFALSE\nFALSE\nFALSE\n0\nNA\nNA\nNA\n6\n6\n0.0002047173\n-0.0002047173\n-0.2184804\nTRUE\nNA\nNA\n0\nQuarters\nZone\n\n\n2022110610\n348\n(9:28) (Shotgun) P.Mahomes pass short left to I.Pacheco to TEN 19 for 4 yards (Z.Cunningham).\n1\n2\n10\nKC\nTEN\nTEN\n23\n09:28:00\n0\n0\nN\n33\n0.884223158\n0.115776842\n4.2493820\nSHOTGUN\n2x2\n11\nC\n-6\n38.95\n14.19\nFALSE\nTRADITIONAL\n3.02\nINSIDE_BOX\n2.202\n2.202\nNA\nFALSE\nFALSE\nFALSE\n0\nNA\nNA\nNA\n4\n4\n-0.0013082474\n0.0013082474\n-0.4277486\nTRUE\nNA\nNA\n0\nQuarters\nZone\n\n\n2022102700\n2799\n(2:16) (Shotgun) L.Jackson up the middle to TB 28 for -1 yards (R.Nunez-Roches).\n3\n2\n8\nBAL\nTB\nTB\n27\n02:16:00\n10\n10\nN\n37\n0.410371426\n0.589628574\n3.9284126\nPISTOL\n3x1\n8\nNA\nNA\nNA\nNA\nTRUE\nDESIGNED_RUN\n2.03\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\nFALSE\nINSIDE_LEFT\nNA\n-1\n-1\n0.0271411501\n-0.0271411501\n-0.6389118\nFALSE\nMAN\nREAD OPTION\n0\nCover-1\nMan\n\n\n2022100205\n2314\n(14:15) Ja.Williams up the middle to DET 32 for 3 yards (C.Barton; U.Nwosu).\n3\n2\n6\nDET\nSEA\nDET\n29\n14:15:00\n15\n31\nN\n39\n0.138289124\n0.861710876\n1.0669310\nSINGLEBACK\n3x1\n15\nNA\nNA\nNA\nNA\nFALSE\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\nFALSE\nINSIDE_RIGHT\nNA\n3\n3\n-0.0242097043\n0.0242097043\n-0.4425174\nFALSE\nMAN\nNA\n0\nCover 6-Left\nZone\n\n\n2022110605\n3861\n(:29) (Shotgun) J.Wilkins up the middle to IND 45 for 5 yards (J.Uche).\n4\n1\n10\nIND\nNE\nIND\n40\n00:29:00\n26\n3\nN\n50\n0.997811435\n0.002188565\n0.9911694\nSHOTGUN\n2x2\n18\nNA\nNA\nNA\nNA\nFALSE\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\nFALSE\nOUTSIDE_LEFT\nNA\n5\n5\n0.0021885647\n-0.0021885647\n-0.9911694\nFALSE\nINSIDE ZONE\nNA\n0\nCover-2\nZone\n\n\n2022100203\n3994\n(:35) K.Murray kneels to CAR 29 for -1 yards.\n4\n3\n12\nARI\nCAR\nCAR\n28\n00:35:00\n16\n26\nN\n82\n0.005252870\n0.994747130\n2.1546908\nNA\nNA\n2\nNA\nNA\nNA\nNA\nFALSE\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n1\nFALSE\nUNKNOWN\nNA\n-1\n-1\n-0.0052528698\n0.0052528698\n0.0000000\nFALSE\nUNDEFINED\nNA\n0\nNA\nNA\n\n\n2022091104\n3662\n(12:51) (Shotgun) J.Hurts pass incomplete short right to D.Smith (A.Bryant) [J.Cominsky].\n4\n3\n12\nPHI\nDET\nPHI\n35\n12:51:00\n28\n38\nN\n45\n0.078610925\n0.921389075\n-0.1411298\nSHOTGUN\n3x1\n3\nI\n-6\n44.69\n10.53\nFALSE\nTRADITIONAL\n1.78\nINSIDE_BOX\n1.568\n1.568\nNA\nTRUE\nTRUE\nFALSE\n0\nNA\nNA\nNA\n0\n0\n0.0123612862\n-0.0123612862\n-1.1616206\nTRUE\nNA\nNA\n0\nCover-0\nMan\n\n\n2022100204\n1422\n(5:22) (Shotgun) C.Rush pass short left to M.Gallup to 50 for 15 yards (K.Fuller).\n2\n3\n8\nDAL\nWAS\nDAL\n35\n05:22:00\n6\n7\nN\n45\n0.539959710\n0.460040290\n0.4480018\nSHOTGUN\n3x1\n12\nC\n15\n59.63\n40.74\nFALSE\nTRADITIONAL\n5.16\nINSIDE_BOX\n3.203\n3.203\nNA\nFALSE\nFALSE\nFALSE\n0\nNA\nNA\nNA\n15\n15\n0.0584896356\n-0.0584896356\n2.1947601\nTRUE\nNA\nNA\n0\nQuarters\nZone\n\n\n\n\n\n\n\nCode\ngt(pp[1:10,])\n\n\n\n\n\n\n\n\ngame_id\nplay_id\nnfl_id\nteam_abbr\nhad_rush_attempt\nrushing_yards\nhad_dropback\npassing_yards\nsack_yards_as_offense\nhad_pass_reception\nreceiving_yards\nwas_targetted_receiver\nyardage_gained_after_the_catch\nfumbles\nfumble_lost\nfumble_out_of_bounds\nassisted_tackle\nforced_fumble_as_defense\nhalf_sack_yards_as_defense\npass_defensed\nquarterback_hit\nsack_yards_as_defense\nsafety_as_defense\nsolo_tackle\ntackle_assist\ntackle_for_a_loss\ntackle_for_a_loss_yardage\nhad_interception\ninterception_yards\nfumble_recoveries\nfumble_recovery_yards\npenalty_yards\npenalty_names\nwas_initial_pass_rusher\ncaused_pressure\ntime_to_pressure_as_pass_rusher\nget_off_time_as_pass_rusher\nin_motion_at_ball_snap\nshift_since_lineset\nmotion_since_lineset\nwas_running_route\nroute_ran\nblocked_player_nfl_id1\nblocked_player_nfl_id2\nblocked_player_nfl_id3\npressure_allowed_as_blocker\ntime_to_pressure_allowed_as_blocker\npff_defensive_coverage_assignment\npff_primary_defensive_coverage_matchup_nfl_id\npff_secondary_defensive_coverage_matchup_nfl_id\n\n\n\n\n2022090800\n56\n35472\nBUF\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nFALSE\nNA\nNA\nFALSE\nFALSE\nFALSE\nNA\nNA\n47917\nNA\nNA\n0\nNA\nNA\nNA\nNA\n\n\n2022090800\n56\n42392\nBUF\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nFALSE\nNA\nNA\nFALSE\nFALSE\nFALSE\nNA\nNA\n47917\nNA\nNA\n0\nNA\nNA\nNA\nNA\n\n\n2022090800\n56\n42489\nBUF\n0\n0\n0\n0\n0\n1\n6\n1\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nFALSE\nNA\nNA\nFALSE\nFALSE\nTRUE\n1\nIN\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n2022090800\n56\n44875\nBUF\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nFALSE\nNA\nNA\nFALSE\nFALSE\nFALSE\nNA\nNA\n43335\nNA\nNA\n0\nNA\nNA\nNA\nNA\n\n\n2022090800\n56\n44985\nBUF\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nFALSE\nNA\nNA\nFALSE\nFALSE\nFALSE\n1\nOUT\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n2022090800\n56\n46076\nBUF\n0\n0\n1\n6\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nFALSE\nNA\nNA\nFALSE\nFALSE\nFALSE\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n2022090800\n56\n47857\nBUF\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nFALSE\nNA\nNA\nFALSE\nFALSE\nFALSE\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n2022090800\n56\n47879\nBUF\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nFALSE\nNA\nNA\nFALSE\nFALSE\nFALSE\n1\nIN\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n2022090800\n56\n48512\nBUF\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nFALSE\nNA\nNA\nFALSE\nFALSE\nFALSE\nNA\nNA\n41239\nNA\nNA\n0\nNA\nNA\nNA\nNA\n\n\n2022090800\n56\n52536\nBUF\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\nNA\nNA\nFALSE\nNA\nNA\nFALSE\nFALSE\nFALSE\n1\nGO\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\n\n\n\n\nCode\ngt(players[1:10,])\n\n\n\n\n\n\n\n\nnfl_id\nheight\nweight\nbirth_date\ncollege_name\nposition\ndisplay_name\n\n\n\n\n25511\n6-4\n225\n1977-08-03\nMichigan\nQB\nTom Brady\n\n\n29550\n6-4\n328\n1982-01-22\nArkansas\nT\nJason Peters\n\n\n29851\n6-2\n225\n1983-12-02\nCalifornia\nQB\nAaron Rodgers\n\n\n30842\n6-6\n267\n1984-05-19\nUCLA\nTE\nMarcedes Lewis\n\n\n33084\n6-4\n217\n1985-05-17\nBoston College\nQB\nMatt Ryan\n\n\n33099\n6-6\n245\n1985-01-16\nDelaware\nQB\nJoe Flacco\n\n\n33107\n6-4\n315\n1985-08-30\nVirginia Tech\nT\nDuane Brown\n\n\n33130\n5-10\n175\n1986-12-01\nCalifornia\nWR\nDeSean Jackson\n\n\n33131\n6-8\n300\n1986-09-01\nMiami\nDE\nCalais Campbell\n\n\n33138\n6-3\n222\n1985-07-02\nMichigan\nQB\nChad Henne\n\n\n\n\n\n\n\nThe data given by NFL Big Data Bowl is already in quite clean for and is tidy overall. We do however need to do additional processing to help answer our question of interest.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tidy and Transform</span>"
    ]
  },
  {
    "objectID": "Tidy.html#transforming-the-data",
    "href": "Tidy.html#transforming-the-data",
    "title": "4  Tidy and Transform",
    "section": "5.3 Transforming the Data",
    "text": "5.3 Transforming the Data\nWe select specific plays that were runs, add columns for required yards and an indicator for a successful run. The logic for a successful run is as follows:\nA run is considered “successful” if it gains:\n\nAt least 40% of the yards needed on 1st down,\nAt least 50% of the yards needed on 2nd down,\n100% of the yards needed (i.e., picks up the first down or TD) on 3rd or 4th down.\n\nWe also remove the unknown rush locations as that provides no value to us.\n\n\nCode\nruns &lt;- plays |&gt; filter(!is.na(rush_location_type)) |&gt;\n                          filter(rush_location_type != \"UNKNOWN\")\n\nruns &lt;- runs |&gt;\n  mutate(\n    required_yards = case_when(\n      down == 1 ~ 0.4 * yards_to_go,\n      down == 2 ~ 0.5 * yards_to_go,\n      TRUE      ~ yards_to_go\n    ),\n    successful_run = yards_gained &gt;= required_yards\n  )",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tidy and Transform</span>"
    ]
  },
  {
    "objectID": "Visualize.html",
    "href": "Visualize.html",
    "title": "5  Visualize",
    "section": "",
    "text": "6 Visualize",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Visualize</span>"
    ]
  },
  {
    "objectID": "Visualize.html#setup",
    "href": "Visualize.html#setup",
    "title": "5  Visualize",
    "section": "6.1 Setup",
    "text": "6.1 Setup\nRequired packages:\n\n\nCode\n#install.packages(\"rvest\")\n#install.packages(\"stringr\")\n#install.packages(\"tidyverse\")\n#install.packages(\"janitor\")\n#install.packages(\"gt\")\n#install.packages(\"reactable\")\n#install.packages(\"ggplot2\")\n#install.packages(\"ggrepel\")\n\nlibrary(rvest)\nlibrary(stringr)\nlibrary(tidyverse)\n\n\nWarning: package 'tibble' was built under R version 4.3.1\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.1.0\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()         masks stats::filter()\n✖ readr::guess_encoding() masks rvest::guess_encoding()\n✖ dplyr::lag()            masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(janitor)\n\n\nWarning: package 'janitor' was built under R version 4.3.3\n\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\n\nCode\nlibrary(gt)\nlibrary(reactable)\nlibrary(ggplot2)\nlibrary(ggrepel)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Visualize</span>"
    ]
  },
  {
    "objectID": "Visualize.html#introduction",
    "href": "Visualize.html#introduction",
    "title": "5  Visualize",
    "section": "6.2 Introduction",
    "text": "6.2 Introduction\nWe now want to perform some EDA to get a better understanding of our data, which will hopefully give us a good sense of what kind of data would be beneficial for us to consider in our model.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Visualize</span>"
    ]
  },
  {
    "objectID": "Visualize.html#eda",
    "href": "Visualize.html#eda",
    "title": "5  Visualize",
    "section": "6.3 EDA",
    "text": "6.3 EDA\nLet’s first look at investigating any trends between play factors and run success.\nFirst considering the distribution by play direction:\n\n\nCode\nruns |&gt;\n  group_by(rush_location_type) |&gt;\n  summarize(success_rate = mean(successful_run, na.rm=TRUE)) |&gt;\n  ggplot(aes(rush_location_type, success_rate, fill = rush_location_type)) +\n  geom_col(fill = \"#D50A0A\") +\n  geom_label(aes(label = round(success_rate,4)), fill = \"white\") +\n  labs(title=\"Run Success Rate by Direction\") +\n  theme_minimal(base_size = 15)\n\n\n\n\n\n\n\n\n\nInterestingly we see that inside runs have a higher success rate. If we think about why this may be, if we think about play calling tendencies, inside runs may be more called upon when close to the 10-yard line, which also means that the requirement for a successful run requires less yards.\nNext considering play formations and success:\n\n\nCode\nruns |&gt;\n  group_by(offense_formation) |&gt;\n  summarize(success_rate = mean(successful_run, na.rm=TRUE), n = n()) |&gt;\n  filter(n &gt; 10) |&gt;\n  ggplot(aes(x = reorder(offense_formation, success_rate), y = success_rate)) +\n  geom_col(fill = \"#D50A0A\") +\n  geom_label(aes(label = round(success_rate, 3)), fill = \"white\") +\n  coord_flip() +\n  labs(title = \"Success Rate by Offensive Formation\", x = \"Formation\", y = \"Success Rate\") +\n  theme_minimal(base_size = 15)\n\n\n\n\n\n\n\n\n\nHere it is quite interesting to see that besides Wildcat formation, we have success rates within the same range of ~.51-.57. It would be interesting to see what the avg yards to go for each formation is:\n\n\nCode\nruns |&gt;\n  group_by(offense_formation) |&gt;\n  summarise(\n    avg_yards_to_go = mean(yards_to_go, na.rm = TRUE),\n    count = n()\n  ) |&gt;\n  arrange(desc(avg_yards_to_go)) |&gt;\n  gt() |&gt;\n  fmt_number(\n    columns = avg_yards_to_go,\n    decimals = 2\n  ) |&gt;\n  cols_label(\n    offense_formation = \"Offense Formation\",\n    avg_yards_to_go = \"Avg Yards to Go\",\n    count = \"Number of Plays\"\n  ) |&gt;\n  tab_header(\n    title = \"Average Yards to Go by Offense Formation\"\n  )\n\n\n\n\n\n\n\n\nAverage Yards to Go by Offense Formation\n\n\nOffense Formation\nAvg Yards to Go\nNumber of Plays\n\n\n\n\nEMPTY\n8.21\n95\n\n\nSHOTGUN\n8.12\n2506\n\n\nPISTOL\n7.91\n432\n\n\nSINGLEBACK\n7.91\n2662\n\n\nI_FORM\n7.74\n749\n\n\nWILDCAT\n6.05\n74\n\n\nJUMBO\n4.44\n105\n\n\n\n\n\n\n\nThis is definitely worth considering. We observe that wildcat, and empty are called infrequently in comparison to many other formations.\nNext looking at how the player may affect success rate:\n\n\nCode\nruns_with_players &lt;- runs |&gt;\n  left_join(\n    pp |&gt; filter(had_rush_attempt == 1) |&gt; select(game_id, play_id, nfl_id),\n    by = c(\"game_id\", \"play_id\")\n  ) |&gt;\n  left_join(\n    players |&gt; select(nfl_id, display_name),\n    by = \"nfl_id\"\n  ) |&gt;\n  group_by(display_name) |&gt;\n  summarize(\n    success_rate = mean(successful_run, na.rm = TRUE),\n    avg_yards = mean(yards_gained, na.rm = TRUE),\n    attempts = n()\n  ) |&gt;\n  arrange(desc(attempts))\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggrepel)\n\n#Top 6 by attempts\ntop_players &lt;- runs_with_players |&gt;\n  slice_max(order_by = attempts, n = 6) |&gt;\n  pull(display_name)\n\nruns_with_players |&gt;\n  filter(display_name %in% top_players) |&gt;\n  ggplot(aes(x = attempts, y = success_rate, size = avg_yards, label = display_name)) +\n  geom_point(color = \"#D50A0A\") +\n  ggrepel::geom_text_repel(color = \"black\", fontface = \"bold\", size = 3, max.overlaps = 20) +\n  scale_size_continuous(range = c(3, 9), name = \"Avg Yards\") +\n  labs(\n    title = \"Top Runners: Success Rate vs Attempts\",\n    x = \"Number of Attempts\",\n    y = \"Success Rate\",\n    caption = \"Point size = Average Yards per Rush\"\n  ) +\n  theme_minimal(base_size = 15) +\n  theme(\n    panel.grid.major = element_line(color = \"grey50\"),   # light grey gridlines\n    panel.grid.minor = element_line(color = \"grey60\")    # lighter minor gridlines\n  )\n\n\n\n\n\n\n\n\n\nIntuitively we see with less attempts we see higher success Rates among the highest used runners. The exception here being Derrick Henry who was arguably the best RB in 2021.\nNow we would like to consider more situation based results:\n\n\nCode\nruns |&gt; \n  mutate(field_zone = case_when(\n    absolute_yardline_number &lt;= 20 ~ \"Own Red Zone\",\n    absolute_yardline_number &gt;= 80 ~ \"Opp Red Zone\",\n    TRUE ~ \"Field\"\n  )) |&gt; \n  group_by(field_zone) |&gt; \n  summarize(\n    success_rate = mean(successful_run, na.rm=TRUE),\n    avg_yards = mean(yards_gained, na.rm=TRUE),\n    n = n()\n  ) |&gt; \n  ggplot(aes(field_zone, success_rate, fill = field_zone)) +\n  geom_col(fill = \"#D50A0A\") +\n  geom_label(aes(label = round(success_rate, 3)), fill = \"white\") +\n  labs(title=\"Run Success Rate by Field Zone\", x = \"Field Zone\", y = \"Success Rate\") +\n  theme_minimal(base_size = 15) \n\n\n\n\n\n\n\n\n\nIn each section of the field we see pretty consistent run success, though there is a bit more success when a team is in their own red zone.\nWe next explore if teams have any tendencies with run location and their respective success:\n\n\nCode\nruns |&gt; \n  group_by(possession_team, rush_location_type) |&gt; \n  summarize(success_rate = mean(successful_run, na.rm=TRUE), attempts = n()) |&gt; \n  ggplot(aes(rush_location_type, possession_team, fill = success_rate)) +\n  geom_tile() +\n  scale_fill_viridis_c(option = \"plasma\") +\n  labs(title=\"Team & Direction Run Success Heatmap\", x=\"Run Direction\", y=\"Team\", fill=\"Success Rate\") +\n  theme_minimal(base_size = 15) +\n  theme(\n    axis.text.x = element_text(size = 7),\n    axis.text.y = element_text(size = 7)\n  )\n\n\n\n\n\n\n\n\n\nFrom this we see teams like Buffalo and Baltimore have exceptional inside right run success. Indiana and Seattle have very low success rates for outside left runs.\nIf we consider the down, we observe the following:\n\n\nCode\nruns |&gt;\n  group_by(down) |&gt;\n  summarize(success_rate = mean(successful_run, na.rm=TRUE), attempts = n()) |&gt;\n  ggplot(aes(x = as.factor(down), y = success_rate, fill = as.factor(down))) +\n  geom_col(width = 0.7, color = \"#ffffff\") +\n  geom_label(aes(label = round(success_rate, 3)), fill = \"white\") +\n  scale_fill_manual(values = rep(\"#D50A0A\", 4)) +\n  labs(title = \"Success Rate by Down\", x = \"Down\", y = \"Success Rate\") +\n  theme_minimal(base_size = 15) +\n  theme(\n    panel.grid.major = element_line(color = \"grey50\"),\n    panel.grid.minor = element_line(color = \"grey60\"),\n    legend.position = \"none\"\n  )\n\n\n\n\n\n\n\n\n\nWe note that success seems to increase from first to fourth down.\nYards to go would also be a feature worth assessing:\n\n\nCode\nggplot(runs, aes(x = yards_to_go, fill = as.factor(successful_run))) +\n  geom_histogram(\n    position = \"dodge\",\n    bins = 15,\n    alpha = 0.95,\n    color = \"black\"\n  ) +\n  scale_fill_manual(\n    values = c(\"#D50A0A\", \"#2E8B57\"),\n    labels = c(\"No\", \"Yes\")\n  ) +\n  labs(\n    title = \"Yards to Go by Run Success\",\n    x = \"Yards to Go\",\n    y = \"Play Count\",\n    fill = \"Successful Run\"\n  ) +\n  theme_minimal(base_size = 15) +\n  theme(\n    panel.grid.major = element_line(color = \"grey50\"),\n    panel.grid.minor = element_line(color = \"grey60\")\n  )\n\n\n\n\n\n\n\n\n\nIntuitively, as yards to go increases, the observed amount of successful runs decrease.\nIf we consider the absolute yard line:\n\n\nCode\nruns |&gt;\n  ggplot(aes(x = absolute_yardline_number, y = as.numeric(successful_run))) +\n  geom_smooth(color = \"#D50A0A\", fill = \"#D50A0A\", alpha = 0.15, linewidth = 1.4) +\n  labs(\n    title = \"Run Success Probability vs. Yardline\",\n    x = \"Yardline\",\n    y = \"Pr(Successful Run)\"\n  ) +\n  theme_minimal(base_size = 15) +\n  theme(\n    panel.grid.major = element_line(color = \"grey50\"),\n    panel.grid.minor = element_line(color = \"grey60\")\n  )\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\n\nThis seems quite consistent so this may not be the most beneficial to our analysis.\nWhat about expected points:\n\n\nCode\nruns |&gt;\n  ggplot(aes(x = expected_points, y = as.numeric(successful_run))) +\n  geom_smooth(color = \"#D50A0A\", fill = \"#D50A0A\", alpha = 0.15, linewidth = 1.4) +\n  labs(\n    title = \"Run Success Probability by Expected Points Added\",\n    x = \"Expected Points\",\n    y = \"Pr(Successful Run)\"\n  ) +\n  theme_minimal(base_size = 15) +\n  theme(\n    panel.grid.major = element_line(color = \"grey50\"),\n    panel.grid.minor = element_line(color = \"grey60\")\n  )\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\n\nFrom this we see that the expected points from a play typically have a higher probability of success as the expected points increase.\nFinally if we explore score differential, but we need to do a little more work with our data first.\n\n\nCode\nruns_play_level &lt;- runs |&gt;\n  left_join(\n    pp |&gt; filter(had_rush_attempt == 1) |&gt;\n      select(game_id, play_id, nfl_id),\n    by = c(\"game_id\", \"play_id\")\n  ) |&gt;\n  left_join(\n    players |&gt; select(nfl_id, display_name, position, height, weight),\n    by = \"nfl_id\"\n  )\n\nrun_plays &lt;- runs_play_level |&gt;\n  mutate(score_diff = pre_snap_home_score - pre_snap_visitor_score)\n\n\nNow we do some more visualization:\n\n\nCode\nrun_plays |&gt;\n  ggplot(aes(x = score_diff, y = as.numeric(successful_run))) +\n  geom_smooth(color = \"#D50A0A\", fill = \"#D50A0A\", alpha = 0.15, linewidth = 1.4) +\n  labs(\n    title = \"Success Rate by Score Differential\",\n    x = \"Score Differential (O - D)\",\n    y = \"Pr(Successful Run)\"\n  ) +\n  theme_minimal(base_size = 15) +\n  theme(\n    panel.grid.major = element_line(color = \"grey50\"),\n    panel.grid.minor = element_line(color = \"grey60\")\n  )\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\n\nWe notice a relatively consistent negative linear trend, though it’s a small slope.\nWith some of these features, I’d like to look at the relationship bewteen the features.\n\n\nCode\nrun_plays |&gt;\n  ggplot(aes(x = yards_to_go, y = expected_points)) +\n  geom_point(alpha = 0.35, color = \"#D50A0A\") +\n  geom_smooth(method = \"lm\", color = \"#013369\", fill = \"#013369\", alpha = 0.08) +\n  labs(title = \"Yards to Go vs Expected Points\",\n       x = \"Yards to Go\", y = \"Expected Points\") +\n  theme_minimal(base_size = 15) +\n  theme(\n    panel.grid.major = element_line(color = \"grey50\"),\n    panel.grid.minor = element_line(color = \"grey60\")\n  )\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nCode\nrun_plays |&gt;\n  ggplot(aes(x = offense_formation, y = yards_to_go, fill = offense_formation)) +\n  geom_boxplot(alpha = 0.8, color = \"#013369\") +\n  scale_fill_manual(values = rep(\"#D50A0A\", length(unique(run_plays$offense_formation)))) +\n  coord_flip() +\n  labs(title = \"Yards to Go by Offensive Formation\", x = \"Formation\", y = \"Yards to Go\") +\n  theme_minimal(base_size = 15) +\n  theme(\n    panel.grid.major = element_line(color = \"grey50\"),\n    panel.grid.minor = element_line(color = \"grey60\"),\n    legend.position = \"none\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\nrun_plays |&gt;\n  ggplot(aes(x = rush_location_type, y = expected_points, fill = rush_location_type)) +\n  geom_boxplot(alpha = 0.8, color = \"#013369\") +\n  scale_fill_manual(values = rep(\"#D50A0A\", length(unique(run_plays$rush_location_type)))) +\n  coord_flip() +\n  labs(title = \"Expected Points by Rush Location\", x = \"Rush Location\", y = \"Expected Points\") +\n  theme_minimal(base_size = 15) +\n  theme(\n    panel.grid.major = element_line(color = \"grey50\"),\n    panel.grid.minor = element_line(color = \"grey60\"),\n    legend.position = \"none\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\nrun_plays |&gt;\n  count(offense_formation, pff_run_concept_primary) |&gt;\n  ggplot(aes(x = offense_formation, y = pff_run_concept_primary, fill = n)) +\n  geom_tile(color = \"#013369\") +\n  scale_fill_gradient(low = \"#013369\", high = \"#D50A0A\") +\n  labs(title = \"Play Volume: Formation vs Run Concept\", x = \"Formation\", y = \"Run Concept\") +\n  theme_minimal(base_size = 13) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nWe can take this up a notch by faceting to evaluate more complex relationships:\n\n\nCode\nrun_plays |&gt;\n  ggplot(aes(x = yards_to_go, y = expected_points)) +\n  geom_point(alpha = 0.35, color = \"#D50A0A\") +\n  geom_smooth(method = \"lm\", color = \"#013369\", fill = \"#013369\", alpha = 0.08) +\n  facet_wrap(~ down) +\n  labs(\n    title = \"Yards to Go vs Expected Points by Down\",\n    x = \"Yards to Go\",\n    y = \"Expected Points\"\n  ) +\n  theme_minimal(base_size = 15) +\n  theme(\n    panel.grid.major = element_line(color = \"grey50\"),\n    panel.grid.minor = element_line(color = \"grey60\")\n  )\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nCode\nrun_plays |&gt;\n  ggplot(aes(x = offense_formation, y = yards_to_go, fill = offense_formation)) +\n  geom_boxplot(alpha = 0.8, color = \"#013369\") +\n  coord_flip() +\n  facet_wrap(~ down) +\n  scale_fill_manual(values = rep(\"#D50A0A\", length(unique(run_plays$offense_formation)))) +\n  labs(\n    title = \"Yards to Go by Formation and Down\",\n    x = \"Formation\",\n    y = \"Yards to Go\"\n  ) +\n  theme_minimal(base_size = 15) +\n  theme(\n    panel.grid.major = element_line(color = \"grey50\"),\n    panel.grid.minor = element_line(color = \"grey60\"),\n    legend.position = \"none\"\n  )",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Visualize</span>"
    ]
  },
  {
    "objectID": "Visualize.html#takeaways",
    "href": "Visualize.html#takeaways",
    "title": "5  Visualize",
    "section": "6.4 Takeaways",
    "text": "6.4 Takeaways\nWe have seen quite a few features that can be of interest from exploring some of our data. Based on what we’ve seen so far, we can have a better idea of what we can do for our model.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Visualize</span>"
    ]
  },
  {
    "objectID": "Model.html",
    "href": "Model.html",
    "title": "6  Model",
    "section": "",
    "text": "7 Model",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Model</span>"
    ]
  },
  {
    "objectID": "Model.html#setup",
    "href": "Model.html#setup",
    "title": "6  Model",
    "section": "7.1 Setup",
    "text": "7.1 Setup\nRequired Packages\n\n\nCode\n#install.packages(\"rvest\")\n#install.packages(\"stringr\")\n#install.packages(\"tidyverse\")\n#install.packages(\"janitor\")\n#install.packages(\"gt\")\n#install.packages(\"reactable\")\n#install.packages(\"ggplot2\")\n#install.packages(\"ggrepel\")\n#install.packages(\"dpylr\")\n#install.packages(caret)\n#install.packages(pROC)\n#install.packages(rpart)\n#install.packages(randomForest)\n#install.packages(xgboost)\n#install.packages(gt)\n\nlibrary(rvest)\nlibrary(stringr)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(gt)\nlibrary(reactable)\nlibrary(ggplot2)\nlibrary(ggrepel)\nlibrary(dplyr)\nlibrary(caret)\nlibrary(pROC)\nlibrary(rpart)\nlibrary(randomForest)\nlibrary(xgboost)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Model</span>"
    ]
  },
  {
    "objectID": "Model.html#introduction-and-initial-steps",
    "href": "Model.html#introduction-and-initial-steps",
    "title": "6  Model",
    "section": "7.2 Introduction and Initial Steps",
    "text": "7.2 Introduction and Initial Steps\nWith some new new found insight from our EDA, we can start developing potential models to work on predicting run play success. We first will try and fit an adequate regression model to the data and use that as a baseline to make predictions. Below we will start exploring potential models.\nWe first set up our space for predictability and prep the data. We removing NAs at this point to ensure there are\n\n\nCode\nset.seed(468) # For reproducibility\n\nmodel_data &lt;- run_plays |&gt;\n  select(play_id, successful_run, down, yards_to_go, absolute_yardline_number,\n         offense_formation, rush_location_type, expected_points, score_diff,\n         pff_run_concept_primary) |&gt;\n  filter(if_all(everything(), ~ !is.na(.))) |&gt;\n  mutate(\n    successful_run = factor(successful_run, levels = c(FALSE, TRUE), labels = c(\"0\", \"1\")),\n    down = as.factor(down),\n    offense_formation = as.factor(offense_formation),\n    rush_location_type = as.factor(rush_location_type),\n    pff_run_concept_primary = as.factor(pff_run_concept_primary)\n  )\n\n\nNext we split our training and testing data.\n\n\nCode\nset.seed(468)\ntrain_idx &lt;- createDataPartition(model_data$successful_run, p = 0.7, list = FALSE)\ntrain &lt;- model_data[train_idx, ]\ntest  &lt;- model_data[-train_idx, ]",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Model</span>"
    ]
  },
  {
    "objectID": "Model.html#fitting-potential-models-and-evaluations",
    "href": "Model.html#fitting-potential-models-and-evaluations",
    "title": "6  Model",
    "section": "7.3 Fitting Potential Models and Evaluations",
    "text": "7.3 Fitting Potential Models and Evaluations\nFirst we fit a logistic regression.\n\n\nCode\nglm_fit &lt;- glm(successful_run ~ down + yards_to_go + absolute_yardline_number +\n                 offense_formation + rush_location_type +\n                 expected_points + score_diff + pff_run_concept_primary,\n               data = train, family = binomial)\nglm_pred &lt;- predict(glm_fit, newdata = test, type = \"response\")\nglm_prob &lt;- glm_pred\nglm_pred_label &lt;- ifelse(glm_pred &gt; 0.5, \"1\", \"0\")\n\n\nThen we try a decision tree.\n\n\nCode\ntree_fit &lt;- rpart(successful_run ~ down + yards_to_go + absolute_yardline_number +\n                    offense_formation + rush_location_type +\n                    expected_points + score_diff + pff_run_concept_primary,\n                  data = train, method = \"class\", cp = 0.01)\ntree_pred_prob &lt;- predict(tree_fit, newdata = test, type = \"prob\")[,\"1\"]\ntree_pred_label &lt;- predict(tree_fit, newdata = test, type = \"class\") # returns \"0\" or \"1\"\n\n\nFitting for random forest.\n\n\nCode\nrf_fit &lt;- randomForest(successful_run ~ down + yards_to_go + absolute_yardline_number +\n                        offense_formation + rush_location_type +\n                        expected_points + score_diff + pff_run_concept_primary,\n                      data = train, ntree = 100, mtry = 3, importance = TRUE)\nrf_pred_prob &lt;- predict(rf_fit, newdata = test, type = \"prob\")[,\"1\"]\nrf_pred_label &lt;- predict(rf_fit, newdata = test, type = \"response\") # returns \"0\" or \"1\"\n\n\nWE fit a XGBoost next.\n\n\nCode\nxg_train_label &lt;- as.integer(as.character(train$successful_run))\nxg_test_label  &lt;- as.integer(as.character(test$successful_run))\n\ntrain_mm &lt;- model.matrix(~ down + yards_to_go + absolute_yardline_number +\n                          offense_formation + rush_location_type +\n                          expected_points + score_diff + pff_run_concept_primary,\n                        data = train)[,-1]\ntest_mm  &lt;- model.matrix(~ down + yards_to_go + absolute_yardline_number +\n                         offense_formation + rush_location_type +\n                         expected_points + score_diff + pff_run_concept_primary,\n                        data = test)[,-1]\n\ndtrain &lt;- xgb.DMatrix(data = train_mm, label = xg_train_label)\ndtest  &lt;- xgb.DMatrix(data = test_mm,  label = xg_test_label)\nxgb_fit &lt;- xgboost(data = dtrain, objective = \"binary:logistic\", nrounds = 100, verbose = 0)\nxgb_pred &lt;- predict(xgb_fit, newdata = dtest)\nxgb_pred_label &lt;- ifelse(xgb_pred &gt; 0.5, 1, 0)\n\n\nWe create a metric retrieval function to collect the metrics for each fit and then compile results for comparison.\n\n\nCode\nget_metrics &lt;- function(truth, prob, pred_label) {\n  levels_used &lt;- c(\"0\", \"1\")\n  truth_f &lt;- factor(as.character(truth), levels = levels_used)\n  pred_label_f &lt;- factor(as.character(pred_label), levels = levels_used)\n  acc &lt;- mean(pred_label_f == truth_f)\n  # Convert AUC from S3 &lt;auc&gt; object to numeric\n  auc &lt;- as.numeric(pROC::roc(as.numeric(truth_f), as.numeric(prob))$auc)\n  pr  &lt;- caret::precision(truth_f, pred_label_f)\n  rec &lt;- caret::recall(truth_f, pred_label_f)\n  f1  &lt;- caret::F_meas(truth_f, pred_label_f)\n  tibble(Accuracy = acc, ROC_AUC = auc, Precision = pr, Recall = rec, F1 = f1)\n}\n\nres_glm   &lt;- get_metrics(test$successful_run, glm_prob, glm_pred_label)\nres_tree  &lt;- get_metrics(test$successful_run, tree_pred_prob, tree_pred_label)\nres_rf    &lt;- get_metrics(test$successful_run, rf_pred_prob, rf_pred_label)\nres_xgb   &lt;- get_metrics(xg_test_label, xgb_pred, xgb_pred_label) # for xgboost, label must be 0/1\n\nresults &lt;- bind_rows(\n    Logistic_Regression = res_glm,\n    Decision_Tree       = res_tree,\n    Random_Forest       = res_rf,\n    XGBoost             = res_xgb,\n    .id = \"Model\"\n)\n\nresults |&gt;\n  mutate(across(where(is.numeric), round, 3)) |&gt;\n  gt() |&gt;\n  tab_header(title = \"Model Comparison for Predicting Run Success\")\n\n\n\n\n\n\n\n\nModel Comparison for Predicting Run Success\n\n\nModel\nAccuracy\nROC_AUC\nPrecision\nRecall\nF1\n\n\n\n\nLogistic_Regression\n0.584\n0.624\n0.517\n0.559\n0.537\n\n\nDecision_Tree\n0.577\n0.611\n0.702\n0.536\n0.608\n\n\nRandom_Forest\n0.563\n0.593\n0.493\n0.534\n0.513\n\n\nXGBoost\n0.556\n0.588\n0.484\n0.527\n0.505\n\n\n\n\n\n\n\nSome theory to cover here:\n\nAccuracy: proportion of all predictions that are correct ( \\(\\frac{TP + TN}{TP + TN +FP + FN}\\))\n\nHigher value suggests model predicts more accurately.\n\nTP - True Positive\nFP - False Positive\nTN - True Negative\nFN - False Negative\n\n\nROC AUC (Receiver Operating Characteristics Area Under Curve): measures model’s model discrimination.\n\nClose to 1 means the model has better discrimination and near 0.5 suggests the model is no better than random chance\n\nPrecision: Proportion of actual successes to predicted successes (\\(\\frac{TP}{TP + FP}\\))\n\nHigh precision means fewer false positives\n\nTP - True Positive\nFP - False Positive\n\n\nRecall: Proportion of correctly identifies runs as successes of actual successful runs (\\(\\frac{TP}{TP + FN}\\))\n\nHigh recall means there are fewer false negatives\n\nTP - True Positive\nFN - False Negative\n\n\nF1: Measure of balance between precision and recall (\\(2*\\frac{Precision * Recall}{Precision + Recall}\\)).\n\nThe higher the better\n\n\nFrom the table summary we observe that logistic regression has the best overall accuracy (0.584) and ROC AUC (0.624). It offers decent balance of precision (0.517) and recall (0.559), with moderate F1 (0.537). The decision tree had slightly lower accuracy/AUC, but notably higher precision (0.702)—however, this comes with much lower recall. Its F1 (0.608) is highest, indicating the best relationship of precision/recall. For the random forest & XGBoost: Slightly lower on all metrics compared to logistic regression and decision tree. Precision/recall/F1 are all moderate. More complex models did not outperform these baselines, suggesting that the chosen features and the inherent unpredictability of run success favor simpler, interpretable approaches.\n\n\nCode\n# Random Forest\nrf_imp &lt;- as.data.frame(importance(rf_fit))\nrf_imp$Variable &lt;- rownames(rf_imp)\nrf_imp |&gt;\n  arrange(desc(MeanDecreaseGini)) |&gt;\n  ggplot(aes(x = reorder(Variable, MeanDecreaseGini), y = MeanDecreaseGini)) +\n  geom_col(fill = \"#D50A0A\", color = \"#ffffff\", alpha = 0.9) +\n  coord_flip() +\n  labs(title = \"Random Forest Variable Importance\", x = \"Feature\", y = \"Mean Decrease in Gini\") +\n  theme_minimal(base_size = 15)\n\n\n\n\n\n\n\n\n\n\n\nCode\n# XGBoost\nxgb_imp &lt;- xgb.importance(model = xgb_fit)\nxgb_imp |&gt;\n  top_n(15, Gain) |&gt;\n  ggplot(aes(x = reorder(Feature, Gain), y = Gain)) +\n  geom_col(fill = \"#D50A0A\", color = \"#ffffff\", alpha = 0.9) +\n  coord_flip() +\n  labs(title = \"XGBoost Variable Importance\", x = \"Feature\", y = \"Gain\") +\n  theme_minimal(base_size = 15) \n\n\n\n\n\n\n\n\n\nIt would be worthwhile to look at the ROC curves.\n\n\nCode\n#ROC Curves (Optional)\nglm_roc &lt;- pROC::roc(as.numeric(as.character(test$successful_run)), as.numeric(glm_prob))\ntree_roc &lt;- pROC::roc(as.numeric(as.character(test$successful_run)), as.numeric(tree_pred_prob))\nrf_roc &lt;- pROC::roc(as.numeric(as.character(test$successful_run)), as.numeric(rf_pred_prob))\nxgb_roc &lt;- pROC::roc(xg_test_label, xgb_pred)\nplot(glm_roc, col = \"#D50A0A\", lwd = 2, main = \"ROC Curves (Test Set)\"); grid()\nlines(tree_roc, col = \"#4392f1\", lwd = 2)\nlines(rf_roc, col = \"#D50A0A\", lwd = 2)\nlines(xgb_roc, col = \"#232323\", lwd = 2)\nlegend(\"bottomright\", legend = c(\"Logistic Regression\",\"Tree\",\"Random Forest\",\"XGBoost\"),\n       col = c(\"#D50A0A\",\"#4392f1\",\"#D50A0A\",\"#232323\"), lwd=2, bty=\"n\")",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Model</span>"
    ]
  },
  {
    "objectID": "Model.html#moving-forward-with-logistic-regression",
    "href": "Model.html#moving-forward-with-logistic-regression",
    "title": "6  Model",
    "section": "7.4 Moving Forward with Logistic Regression",
    "text": "7.4 Moving Forward with Logistic Regression\nWe will move forward with our logistic regression model. We start by reintroducing our glm model fit:\n\n\nCode\nglm_fit &lt;- glm(successful_run ~ down + yards_to_go + absolute_yardline_number +\n                 offense_formation + rush_location_type +\n                 expected_points + score_diff + pff_run_concept_primary,\n               data = train, family = binomial)\nsummary(glm_fit)\n\n\n\nCall:\nglm(formula = successful_run ~ down + yards_to_go + absolute_yardline_number + \n    offense_formation + rush_location_type + expected_points + \n    score_diff + pff_run_concept_primary, family = binomial, \n    data = train)\n\nCoefficients:\n                                      Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                          1.582e+00  4.545e-01   3.480 0.000502 ***\ndown2                               -3.363e-01  8.412e-02  -3.998 6.38e-05 ***\ndown3                               -1.203e+00  1.462e-01  -8.229  &lt; 2e-16 ***\ndown4                               -1.401e+00  3.045e-01  -4.601 4.21e-06 ***\nyards_to_go                         -1.812e-01  1.385e-02 -13.083  &lt; 2e-16 ***\nabsolute_yardline_number            -6.203e-04  1.270e-03  -0.488 0.625350    \noffense_formationI_FORM              4.738e-01  4.096e-01   1.157 0.247452    \noffense_formationJUMBO              -1.582e-01  4.694e-01  -0.337 0.736076    \noffense_formationPISTOL              3.809e-01  4.158e-01   0.916 0.359606    \noffense_formationSHOTGUN             4.765e-01  4.003e-01   1.190 0.233891    \noffense_formationSINGLEBACK          2.687e-01  4.032e-01   0.667 0.505065    \noffense_formationWILDCAT             6.593e-01  5.065e-01   1.302 0.193049    \nrush_location_typeINSIDE_RIGHT       6.047e-02  8.318e-02   0.727 0.467213    \nrush_location_typeOUTSIDE_LEFT      -3.005e-01  9.264e-02  -3.244 0.001179 ** \nrush_location_typeOUTSIDE_RIGHT     -1.852e-01  8.983e-02  -2.061 0.039280 *  \nexpected_points                     -5.380e-02  2.120e-02  -2.538 0.011149 *  \nscore_diff                          -3.469e-05  3.507e-03  -0.010 0.992109    \npff_run_concept_primaryDRAW          3.570e-01  2.282e-01   1.564 0.117767    \npff_run_concept_primaryFB RUN        1.939e-01  4.854e-01   0.399 0.689588    \npff_run_concept_primaryINSIDE ZONE   7.000e-02  1.422e-01   0.492 0.622637    \npff_run_concept_primaryMAN           1.646e-01  1.493e-01   1.102 0.270266    \npff_run_concept_primaryOUTSIDE ZONE -5.060e-02  1.395e-01  -0.363 0.716771    \npff_run_concept_primaryPOWER         2.930e-01  1.599e-01   1.832 0.066920 .  \npff_run_concept_primaryPULL LEAD     3.906e-02  1.644e-01   0.238 0.812257    \npff_run_concept_primarySNEAK         1.787e+00  3.949e-01   4.526 6.00e-06 ***\npff_run_concept_primaryTRAP          4.017e-01  2.651e-01   1.515 0.129737    \npff_run_concept_primaryTRICK         6.577e-01  2.189e-01   3.005 0.002657 ** \npff_run_concept_primaryUNDEFINED    -1.488e-01  3.676e-01  -0.405 0.685652    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 6123.3  on 4430  degrees of freedom\nResidual deviance: 5787.2  on 4403  degrees of freedom\nAIC: 5843.2\n\nNumber of Fisher Scoring iterations: 4\n\n\n\n\nCode\nlibrary(broom)\ntidy(glm_fit) |&gt;\n  mutate(\n    odds_ratio = exp(estimate)\n  ) |&gt;\n  select(term, estimate, odds_ratio, std.error, p.value) |&gt;\n  arrange(desc(abs(estimate))) |&gt;\n  gt::gt() |&gt;\n  gt::fmt_number(columns = c(estimate, odds_ratio, std.error), decimals = 3) |&gt;\n  gt::tab_header(title = \"Logistic Regression Coefficient Estimates and Odds Ratios\")\n\n\n\n\n\n\n\n\nLogistic Regression Coefficient Estimates and Odds Ratios\n\n\nterm\nestimate\nodds_ratio\nstd.error\np.value\n\n\n\n\npff_run_concept_primarySNEAK\n1.787\n5.973\n0.395\n6.003280e-06\n\n\n(Intercept)\n1.582\n4.862\n0.454\n5.017038e-04\n\n\ndown4\n−1.401\n0.246\n0.304\n4.205369e-06\n\n\ndown3\n−1.203\n0.300\n0.146\n1.884548e-16\n\n\noffense_formationWILDCAT\n0.659\n1.933\n0.506\n1.930492e-01\n\n\npff_run_concept_primaryTRICK\n0.658\n1.930\n0.219\n2.657282e-03\n\n\noffense_formationSHOTGUN\n0.476\n1.610\n0.400\n2.338907e-01\n\n\noffense_formationI_FORM\n0.474\n1.606\n0.410\n2.474517e-01\n\n\npff_run_concept_primaryTRAP\n0.402\n1.494\n0.265\n1.297365e-01\n\n\noffense_formationPISTOL\n0.381\n1.464\n0.416\n3.596058e-01\n\n\npff_run_concept_primaryDRAW\n0.357\n1.429\n0.228\n1.177673e-01\n\n\ndown2\n−0.336\n0.714\n0.084\n6.384988e-05\n\n\nrush_location_typeOUTSIDE_LEFT\n−0.301\n0.740\n0.093\n1.178895e-03\n\n\npff_run_concept_primaryPOWER\n0.293\n1.340\n0.160\n6.691976e-02\n\n\noffense_formationSINGLEBACK\n0.269\n1.308\n0.403\n5.050648e-01\n\n\npff_run_concept_primaryFB RUN\n0.194\n1.214\n0.485\n6.895876e-01\n\n\nrush_location_typeOUTSIDE_RIGHT\n−0.185\n0.831\n0.090\n3.927991e-02\n\n\nyards_to_go\n−0.181\n0.834\n0.014\n4.099729e-39\n\n\npff_run_concept_primaryMAN\n0.165\n1.179\n0.149\n2.702658e-01\n\n\noffense_formationJUMBO\n−0.158\n0.854\n0.469\n7.360764e-01\n\n\npff_run_concept_primaryUNDEFINED\n−0.149\n0.862\n0.368\n6.856518e-01\n\n\npff_run_concept_primaryINSIDE ZONE\n0.070\n1.073\n0.142\n6.226370e-01\n\n\nrush_location_typeINSIDE_RIGHT\n0.060\n1.062\n0.083\n4.672130e-01\n\n\nexpected_points\n−0.054\n0.948\n0.021\n1.114862e-02\n\n\npff_run_concept_primaryOUTSIDE ZONE\n−0.051\n0.951\n0.139\n7.167712e-01\n\n\npff_run_concept_primaryPULL LEAD\n0.039\n1.040\n0.164\n8.122569e-01\n\n\nabsolute_yardline_number\n−0.001\n0.999\n0.001\n6.253502e-01\n\n\nscore_diff\n0.000\n1.000\n0.004\n9.921090e-01\n\n\n\n\n\n\n\nModel predictions:\n\n\nCode\nglm_pred &lt;- predict(glm_fit, newdata = test, type = \"response\")\nglm_pred_label &lt;- ifelse(glm_pred &gt; 0.5, \"1\", \"0\")\nlibrary(pROC)\nroc_curve &lt;- roc(test$successful_run, glm_pred)\nplot(roc_curve, col = \"#D50A0A\", lwd = 2, main = \"Logistic Regression ROC Curve\")\n\n\n\n\n\n\n\n\n\nCode\nauc(roc_curve)\n\n\nArea under the curve: 0.6244\n\n\nWe fit the final logistic regression model (with just the training fold):\n\n\nCode\nglm_fit &lt;- glm(successful_run ~ down + yards_to_go + absolute_yardline_number +\n                 offense_formation + rush_location_type +\n                 expected_points + score_diff + pff_run_concept_primary,\n               data = train, family = binomial)\n\n\nBelow for reference we fit with the full set of model data:\n\n\nCode\nglm_fit_full &lt;- glm(successful_run ~ down + yards_to_go + absolute_yardline_number +\n                      offense_formation + rush_location_type +\n                      expected_points + score_diff + pff_run_concept_primary,\n                    data = model_data, family = binomial)\nmodel_data &lt;- model_data |&gt;\n  mutate(pred_prob = predict(glm_fit_full, newdata = model_data, type = \"response\"))",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Model</span>"
    ]
  },
  {
    "objectID": "Model.html#model-storage",
    "href": "Model.html#model-storage",
    "title": "6  Model",
    "section": "7.5 Model Storage",
    "text": "7.5 Model Storage\nNow that we have our model of choice, we need to store it for later access.\nLibraries needed for this:\n\n\nCode\n#install.packages(\"pins\")\n#install.packages(\"vetiver\")\n#install.packages(\"plumber\")\n#install.packages(\"aws.s3\")\n#install.packages(\"DBI\")\n#install.packages(\"duckdb\")\n#install.packages(\"paws\")\n\nlibrary(pins)\nlibrary(vetiver)\nlibrary(plumber)\nlibrary(aws.s3)\nlibrary(DBI)\nlibrary(duckdb)\n\n\nStore model data and predicted values. glm_fit_full is our model, so that is what we will set into Vetiver to store our model.\n\n\nCode\nlibrary(pins)\nlibrary(vetiver)\nlibrary(plumber)\nlibrary(aws.s3)\nlibrary(arrow)\n\n\n\nAttaching package: 'arrow'\n\n\nThe following object is masked from 'package:lubridate':\n\n    duration\n\n\nThe following object is masked from 'package:utils':\n\n    timestamp\n\n\nCode\nlibrary(paws)\nSys.setenv(\"AWS_ACCESS_KEY_ID\" = Sys.getenv(\"AWS_ACCESS_KEY_ID\"),\n           \"AWS_SECRET_ACCESS_KEY\" = Sys.getenv(\"AWS_SECRET_ACCESS_KEY\"),\n           \"AWS_DEFAULT_REGION\" = \"us-east-2\")\n\npredictions &lt;- model_data |&gt;\n  select(play_id, pred_prob)\n\nbucket = \"bkoshy-bdb-rushing\"\n\ns3write_using(predictions, \n              FUN = write_parquet, \n              bucket = bucket, object = \"predictions_glm.parquet\")\n\nboard &lt;- board_s3(bucket = bucket) \n\nv &lt;- vetiver_model(glm_fit_full, \"glm_model\")\nvetiver_pin_write(board, v)\n\n\nCreating new version '20250811T230948Z-5141c'\n\n\nWriting to pin 'glm_model'\n\nCreate a Model Card for your published model\n• Model Cards provide a framework for transparent, responsible reporting\n• Use the vetiver `.Rmd` template as a place to start\n\n\nInterface with the model:\nCreating Dockerfile:\n\n\nCode\nvetiver_prepare_docker(\n    board, \n    \"glm_model\", \n    docker_args = list(port = 8080)\n)\n\n\n- The lockfile is already up to date.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Model</span>"
    ]
  },
  {
    "objectID": "Communicate.html",
    "href": "Communicate.html",
    "title": "7  Communicate",
    "section": "",
    "text": "8 Communicate",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Communicate</span>"
    ]
  },
  {
    "objectID": "Communicate.html#setup",
    "href": "Communicate.html#setup",
    "title": "7  Communicate",
    "section": "8.1 Setup",
    "text": "8.1 Setup\n\n\nCode\n#install.packages(\"rvest\")\n#install.packages(\"stringr\")\n#install.packages(\"tidyverse\")\n#install.packages(\"janitor\")\n#install.packages(\"gt\")\n#install.packages(\"reactable\")\n#install.packages(\"ggplot2\")\n#install.packages(\"ggrepel\")\n#install.packages(\"dpylr\")\n#install.packages(caret)\n\nlibrary(rvest)\nlibrary(stringr)\nlibrary(tidyverse)\n\n\nWarning: package 'tibble' was built under R version 4.3.1\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.1.0\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()         masks stats::filter()\n✖ readr::guess_encoding() masks rvest::guess_encoding()\n✖ dplyr::lag()            masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(janitor)\n\n\nWarning: package 'janitor' was built under R version 4.3.3\n\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\n\nCode\nlibrary(gt)\nlibrary(reactable)\nlibrary(ggplot2)\nlibrary(ggrepel)\nlibrary(dplyr)\nlibrary(caret)\n\n\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Communicate</span>"
    ]
  },
  {
    "objectID": "Communicate.html#conclusions",
    "href": "Communicate.html#conclusions",
    "title": "7  Communicate",
    "section": "8.2 Conclusions",
    "text": "8.2 Conclusions\nFinally communicating our findings in a neat and presentable way. I have chosen to build an interactive dashboard as the Shiny app.\nI felt as this was the most appropriate way to show my findings and give my intended audience the most useful way to view the information.\nThe Shiny app can be found here: BDB Rushing\nIt consists of 3 main tabs\n\nPlayer Analysis\n\nAims to give a summary of runner performance\n\nSuccess Report\n\nThis gives a summary of plays that have seen the most success.\n\nPrediction\n\nTakes game features to predict run play success",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Communicate</span>"
    ]
  },
  {
    "objectID": "Communicate.html#limitations",
    "href": "Communicate.html#limitations",
    "title": "7  Communicate",
    "section": "8.3 Limitations",
    "text": "8.3 Limitations\nAs you can tell, this isn’t a very polished report. I will be the first to say that the quality of this report could have been better with more time.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Communicate</span>"
    ]
  },
  {
    "objectID": "References.html",
    "href": "References.html",
    "title": "8  References",
    "section": "",
    "text": "9 References\n\nBobbitt (2020a)\nBobbitt (2020b)\nConstructing VIPs in r (n.d.)\n“DevOps for Data Science” (n.d.)\n“Every Step You Take: Measuring A Defender’s Moves” (n.d.)\n“National Football League (NFL) Logo Colors - Brands and Logos - SchemeColor.com” (n.d.)\n“R for Data Science (2e)” (n.d.)\n“Sacks Big Data Bowl Workshop” (n.d.)\n“NFL Big Data Bowl 2025” (n.d.)\n“Tidy Characterizations of Model Performance” (n.d.)\nWickham (n.d.)\n“Citations” (n.d.)\n\n\n\n\n\nBobbitt, Zach. 2020a. “XGBoost in R: A Step-by-Step Example.” Statology. https://www.statology.org/xgboost-in-r/.\n\n\n———. 2020b. “XGBoost in r: A Step-by-Step Example.” https://www.statology.org/xgboost-in-r/.\n\n\n“Citations.” n.d. https://quarto.org/docs/authoring/citations.html.\n\n\nConstructing VIPs in r. n.d. https://cran.r-project.org/web/packages/vip/vignettes/vip.html.\n\n\n“DevOps for Data Science.” n.d. https://do4ds.com/.\n\n\n“Every Step You Take: Measuring A Defender’s Moves.” n.d. https://kaggle.com/code/hassaaninayatali/every-step-you-take-measuring-a-defender-s-moves.\n\n\n“National Football League (NFL) Logo Colors - Brands and Logos - SchemeColor.com.” n.d. https://www.schemecolor.com/national-football-league-nfl-logo-colors.php.\n\n\n“NFL Big Data Bowl 2025.” n.d. https://kaggle.com/nfl-big-data-bowl-2025.\n\n\n“R for Data Science (2e).” n.d. https://r4ds.hadley.nz/.\n\n\n“Sacks Big Data Bowl Workshop.” n.d. https://www.stat.cmu.edu/cmsac/conference/2022/workshop/slides.html#1.\n\n\n“Tidy Characterizations of Model Performance.” n.d. https://yardstick.tidymodels.org/.\n\n\nWickham, Hadley. n.d. Welcome  Mastering Shiny. Accessed August 7, 2025. https://mastering-shiny.org/index.html.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>References</span>"
    ]
  }
]